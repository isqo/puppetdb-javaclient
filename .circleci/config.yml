# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - setup_remote_docker
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn integration-test

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
  acceptance-latestpdb:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker
      - run: mvn -Dmaven.test.skip=true install
      - run:
          name: Start containers and verify they are working
          command: |
            set -x
            # create a dummy container which will hold a volume with config
            docker create -v /docker-entrypoint-initdb.d --name configs alpine:3.4 /bin/true
            # copy a config file into this volume
            docker cp acceptance/docker/initdb/puppetdb.sql configs:/docker-entrypoint-initdb.d
            # create a dummy container which will hold a volume with config
            docker create -v /usr/src/mymaven --name acceptance alpine:3.4 /bin/true
            # copy a config file into this volume
            docker cp ./. acceptance:/usr/src/mymaven
            docker network create mynetwork
            docker run -d --expose 5432 -e POSTGRES_PASSWORD=puppetdb -e POSTGRES_USER=puppetdb --network mynetwork --volumes-from configs --name postgres postgres:9.6
            docker run -d --expose 8081 --expose 8080 -e USE_PUPPETSERVER=false -e CONSUL_ENABLED=false --network mynetwork  --name puppetdb puppet/puppetdb
            docker exec puppetdb curl --retry 20 --retry-connrefused http://puppetdb:8080/pdb/query/v4/nodes?query=%5B%22%3D%22%2C%22certname%22%2C%22c826a077907a.us-east-2.compute.internal%22%5D
             docker run -it --name acceptancetests --volumes-from acceptance --network mynetwork -w /usr/src/mymaven/acceptance maven:3.3-jdk-8 ls --all
            docker run -it --name acceptancetests --volumes-from acceptance --network mynetwork -w /usr/src/mymaven/acceptance maven:3.3-jdk-8 mvn clean install
      - run:
          name: Save test results
          command: |
            docker cp acceptancetests:/usr/src/mymaven/acceptance/target acceptance
            mkdir -p ~/acceptance-junit
            find . -type f -regex "./acceptance/target/surefire-reports/.*xml" -exec cp {} ~/acceptance-junit \;
          when: always
      - store_test_results:
          path: ~/acceptance-junit
      - store_artifacts:
          path: ~/acceptance-junit
workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - acceptance-latestpdb